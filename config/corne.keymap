/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        gaming {
            bindings = <&tog 4>;
            key-positions = <36 41>;
            layers = <0>;
        };

        caps_lock {
            bindings = <&kt CAPS>;
            key-positions = <13 22>;
        };
    };

    behaviors {
        rhrm: rhrm {
            compatible = "zmk,behavior-hold-tap";
            label = "RHRM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            retro-tap;
            hold-trigger-key-positions = <36 37 38 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 30 31 32 6 7 8>;
            hold-trigger-on-release;
        };
        lhrm: lhrm {
            compatible = "zmk,behavior-hold-tap";
            label = "LHRM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-key-positions = <7 6 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 27 28 29 36 37 38 3 4 5>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            label = "Base";
            bindings = <
&kp TAB    &kp Q          &kp W             &kp E             &kp R               &kp T        &kp Y      &kp U                &kp I              &kp O              &kp P                          &kp BSPC
&kp LCTRL  &lhrm LCTRL A  &lhrm LEFT_WIN S  &lhrm LEFT_ALT D  &lhrm LEFT_SHIFT F  &kp G        &kp H      &rhrm RIGHT_SHIFT J  &rhrm RIGHT_ALT K  &rhrm RIGHT_WIN L  &rhrm RIGHT_CONTROL SEMICOLON  &kp SQT
&kp LSHFT  &kp Z          &kp X             &kp C             &kp V               &kp B        &kp N      &kp M                &kp COMMA          &kp DOT            &kp FSLH                       &kp ESC
                                            &kp LGUI          &mo 1               &kp SPACE    &kp ENTER  &mo 2                &kp BACKSPACE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Lower";
            bindings = <
&kp TAB     &kp N1         &kp N2      &kp N3      &kp N4    &kp N5           &kp N6             &kp N7           &kp N8         &kp N9          &kp N0      &kp BSPC
&bt BT_CLR  &kp BACKSPACE  &kp GRAVE   &kp INSERT  &kp HOME  &kp PAGE_UP      &kp K_PLAY_PAUSE   &kp LEFT         &kp DOWN       &kp UP_ARROW    &kp RIGHT   &kp
&kp LSHFT   &kp TAB        &kp ESCAPE  &kp DELETE  &kp END   &kp PAGE_DOWN    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_MUTE     &kp C_PREVIOUS  &kp C_NEXT  &kp
                                       &kp LGUI    &trans    &kp SPACE        &kp RET            &trans           &kp BACKSPACE
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Raise";
            bindings = <
&kp TAB    &kp EXCL       &kp AT    &kp HASH       &kp DLLR          &kp PRCNT          &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &kp BACKSPACE  &kp APOS  &kp LESS_THAN  &kp GREATER_THAN  &kp PRINTSCREEN    &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &kp GRAVE      &trans    &kp DELETE     &trans            &trans             &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                                    &kp LGUI       &trans            &kp SPACE          &kp RET    &trans     &kp RALT
            >;
        };

        TRI {
            bindings = <
&trans  &kp F1        &kp F2        &kp F3        &kp F4        &kp F5          &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &kp F11  &trans
&trans  &bt BT_CLR    &bl BL_TOG    &bl BL_DEC    &bl BL_INC    &trans          &trans  &trans  &trans  &trans  &kp F12  &trans
                                    &trans        &trans        &trans          &trans  &trans  &trans
            >;

            label = "Tri";
        };

        Gaming {
            bindings = <
&trans  &kp TAB    &kp Q  &kp W       &kp E  &kp R        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LSHFT  &kp A  &kp S       &kp D  &kp F        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LCTRL  &kp Z  &kp X       &kp C  &kp V        &trans  &trans  &trans  &trans  &trans  &trans
                          &kp RETURN  &mo 5  &kp SPACE    &trans  &trans  &trans
            >;

            label = "Game";
        };

        Gaming_2 {
            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp J   &kp K   &kp I   &kp M     &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;

            label = "Game 2";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
